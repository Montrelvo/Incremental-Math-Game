Title: p5.js Math Visualization Game Development Plan (for Roo)
Platform: itch.io (HTML5 browser-based game)
Primary Technology: p5.js (JavaScript)

---

PHASE 1: Project Setup & Research (1 week)
Goal: Establish tooling, repo, and proof-of-concept sketches.

1.1 Repository & Hosting:
 - Create Git repo, setup index.html, sketch.js.
 - Deploy to GitHub Pages or Netlify for previews.

1.2 p5.js Familiarization:
 - Review reference.
 - Create sketches: sine wave, parametric circle, animated point.

1.3 Define Core Mechanics:
 - Document gameplay use of math.
 - List interactive elements needed.

1.4 Asset & UI Inventory:
 - Identify required UI elements and visuals.

1.5 Technical Spike:
 - Prototype linking sliders to graph drawing in p5.js.

Deliverables: Live prototype, design doc.

---

PHASE 2: Core Prototype (2 weeks)
Goal: Create one playable mechanic.

2.1 Game State Management:
 - Structure states: MENU, PLAY, RESULTS.

2.2 Mechanic Implementation:
 - Plot a function (e.g., parabola), place targets.

2.3 Input Controls:
 - Add sliders or draggable points to control function.

2.4 Collision Detection:
 - Test if curve hits target area.

2.5 UI Polish:
 - Axis labels, value readouts, clean control layout.

2.6 Playtesting:
 - Evaluate challenge balance and responsiveness.

Deliverables: Playable core puzzle prototype.

---

PHASE 3: Feature Expansion (3 weeks)
Goal: Add multiple levels and mechanics.

3.1 Level Architecture:
 - Use JSON or JS objects to define each level.

3.2 Additional Functions:
 - Implement trigonometric, exponential, and piecewise functions.

3.3 UI Framework:
 - Create level-select menu, score tracking.

3.4 Sound & Feedback:
 - Add sound FX and animations for win/loss.

3.5 Accessibility:
 - Support keyboard control, tooltips, etc.

3.6 QA & Balancing:
 - Internal playtests and adjustments.

Deliverables: Multi-level build with varied math puzzles.

---

PHASE 4: Final Polish & Deployment (2 weeks)
Goal: Optimize, finalize assets, prep for release.

4.1 Performance Tuning:
 - Ensure smooth draw loops on mobile/desktop.

4.2 Visual Enhancements:
 - Custom fonts, transitions, menus.

4.3 Analytics:
 - Add Google Analytics and error logs.

4.4 Documentation:
 - In-game tutorial, README for build.

4.5 Packaging:
 - Build deployable ZIP for itch.io.

Deliverables: Final responsive build, ready for launch.

---

PHASE 5: Launch & Post-Launch Support (2+ weeks)
Goal: Release and support game.

5.1 itch.io Setup:
 - Upload build, design page, screenshots.

5.2 Marketing:
 - Share on social media, dev forums.

5.3 Monitoring:
 - Watch for errors and feedback.

5.4 Community Engagement:
 - Respond to comments, plan stretch updates.

5.5 Post-Mortem:
 - Document data, insights, and lessons learned.

Deliverables: Live game, community presence, analytics summary.